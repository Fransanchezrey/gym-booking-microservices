# --- openapi.yml para timetable-service ---

openapi: 3.0.1
info:
  title: "Timetable Service API"
  description: "API para gestionar el horario de clases del gimnasio, incluyendo fechas, horas y aforo."
  version: "1.0.0"

servers:
  - url: http://localhost:8083
    description: Servidor de Desarrollo

paths:
  /timetable:
    get:
      tags:
        - "Timetable Management"
      summary: "Obtiene el horario de clases para un rango de fechas."
      operationId: "getTimetable"
      parameters:
        - name: fromDate
          in: query
          description: "Fecha de inicio para la búsqueda (formato YYYY-MM-DD)."
          required: true
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          description: "Fecha de fin para la búsqueda (formato YYYY-MM-DD)."
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: "Horario obtenido con éxito."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduledClassResponse'
    post:
      tags:
        - "Timetable Management"
      summary: "Agenda una nueva clase en el horario."
      operationId: "scheduleClass"
      requestBody:
        description: "Datos de la clase a agendar."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledClassInput'
      responses:
        '201':
          description: "Clase agendada con éxito."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledClass'

  /timetable/by-class:
    get:
      tags:
        - "Timetable Management"
      summary: "Obtiene el horario de clases por classId."
      operationId: "getByClassId"
      parameters:
        - name: classId
          in: query
          description: "ID de la clase a buscar."
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Clases encontradas por classId."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduledClassResponse'

  /timetable/by-instructor:
    get:
      tags:
        - "Timetable Management"
      summary: "Obtiene el horario de clases por instructorId."
      operationId: "getByInstructorId"
      parameters:
        - name: instructorId
          in: query
          description: "ID del instructor a buscar."
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Clases encontradas por instructorId."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduledClassResponse'

  /timetable/{id}:
    delete:
      tags:
        - "Timetable Management"
      summary: "Elimina una clase agendada por su ID."
      operationId: "deleteById"
      parameters:
        - name: id
          in: path
          required: true
          description: "ID de la clase agendada a eliminar."
          schema:
            type: integer
      responses:
        '204':
          description: "Clase eliminada con éxito."
        '404':
          description: "Clase no encontrada."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ScheduledClass:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        classId:
          type: integer
          format: int64
          description: "ID de la clase desde class-catalog-service."
        instructorId:
          type: integer
          format: int64
          description: "ID del instructor (lo gestionaremos en el futuro)."
        startTime:
          type: string
          format: date-time
          example: "2025-10-27T18:00:00"
        endTime:
          type: string
          format: date-time
          example: "2025-10-27T19:00:00"
        capacity:
          type: integer
          description: "Aforo máximo de la clase."
        spotsAvailable:
          type: integer
          description: "Plazas libres."

    ScheduledClassInput:
      type: object
      properties:
        classId:
          type: integer
        instructorId:
          type: integer
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        capacity:
          type: integer

    ScheduledClassResponse:
      type: object
      properties:
        id:
          type: integer
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        spotsAvailable:
          type: integer
        className:
          type: string
          example: "Yoga Vinyasa"
        instructorName:
          type: string
          example: "Ana García"

    ErrorResponse:
    # ... (el mismo esquema de error que ya conoces)