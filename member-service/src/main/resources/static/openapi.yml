# --- openapi.yml para member-service ---

openapi: 3.0.1
info:
  title: "Member Service API"
  description: "API para gestionar los socios del gimnasio y sus membresías."
  version: "1.0.0"

servers:
  - url: http://localhost:8081
    description: Servidor de Desarrollo

paths:
  # --- Endpoints para /members ---
  /members:
    get:
      tags:
        - "Member Management"
      summary: "Obtiene una lista de todos los socios."
      operationId: "getAllMembers"
      responses:
        '200':
          description: "Lista de socios obtenida con éxito."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
    post:
      tags:
        - "Member Management"
      summary: "Registra un nuevo socio."
      operationId: "createMember"
      requestBody:
        description: "Datos del nuevo socio a crear."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberInput'
      responses:
        '201':
          description: "Socio creado con éxito."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: "Datos de entrada inválidos."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # --- Endpoints para /members/{id} ---
  /members/{id}:
    # --- GET /members/{id} ---
    get:
      tags:
        - "Member Management"
      summary: "Busca un socio por su ID."
      operationId: "getMemberById"
      parameters:
        - name: id
          in: path
          description: "ID numérico del socio a buscar."
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Socio encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '404':
          description: "Socio no encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    # --- DELETE /classes/{id} ---
    delete:
      tags:
        - "Members Management"
      summary: "Elimina un member por su Id."
      operationId: "deleteMemberById"
      parameters:
        - name: id
          in: path
          description: "ID numérico del member a eliminar."
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204': # No Content
          description: "Member eliminado con éxito."
        '404':
          description: "Member no encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

# --- Componentes Reutilizables ---
components:
  schemas:
    Member:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: "Ana García"
        email:
          type: string
          format: email
          example: "ana.garcia@example.com"
        membershipStatus:
          type: string
          description: "Estado de la membresía del socio."
          enum: [ACTIVE, INACTIVE, FROZEN]
          example: "ACTIVE"

    MemberInput:
      type: object
      properties:
        name:
          type: string
          example: "Carlos Pérez"
        email:
          type: string
          format: email
          example: "carlos.perez@example.com"
        membershipStatus:
          type: string
          description: "Estado inicial de la membresía."
          enum: [ACTIVE, INACTIVE, FROZEN]
          example: "ACTIVE"

    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          example: "https://developer.gymbooking.com/errors/not-found"
        title:
          type: string
          example: "Recurso no encontrado"
        code:
          type: string
          example: "2001"
        detail:
          type: string
          example: "El socio con id 999 no existe."
        instance:
          type: string
          example: "/members/999"